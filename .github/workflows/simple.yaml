name: Self-Hosted Runner Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:
    

jobs:
  build:
    runs-on: self-hosted  # Use your self-hosted runnerr
    steps:
      - name: Build and Test
        run: echo "Your build and test goes here..."
      # - name: Test run
      #   run: | 
      #     $last_commit_message=${{ github.event.commit[1].message }}
      #     echo "$($last_commit_message)"
  security-scan:
    runs-on: self-hosted
    steps:
      # - uses: actions/checkout@v4 new restartt
      - name: Security Scanner
        run: echo "Your security scan goes here..."
      - name: Transition Jira Issue
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_KEY: "GITHUB-3"
        # run:  echo "SECRET ${{ secrets.JIRA_API_TOKEN }}"
        # $ApiToken = "ATATT3xFfGF0bS5kr_GhBXwjOsxyObMT-1faJKR8AthR3JAWE9D2YUcB1AiBmuYNLlyAiJM3eB_L-nK80h2D7cfqMv9_pxF7ne66qMKDzRIDCbTZM98gfhOa6Xt1JGXBrIeBBRVEWS7qvWtKhzFg71ufSvjgRYZ7h5o7Zc5foXK83iYDuuPUf6U=0E1C0C0B"

        # run: |
        #   curl -X POST -H "Content-Type: application/json" --user "ary.suwandi@izeno.com:ATATT3xFfGF0bS5kr_GhBXwjOsxyObMT-1faJKR8AthR3JAWE9D2YUcB1AiBmuYNLlyAiJM3eB_L-nK80h2D7cfqMv9_pxF7ne66qMKDzRIDCbTZM98gfhOa6Xt1JGXBrIeBBRVEWS7qvWtKhzFg71ufSvjgRYZ7h5o7Zc5foXK83iYDuuPUf6U=0E1C0C0B" "https://izeno-rovo.atlassian.net/rest/api/3/issue/GITHUB-3/transitions" -d "{\"transition\": {\"id\": \"31\"}}"
        run: |
          # $LastCommit = ${{ github.event.commit[1].message }}
          $Username = "${{ secrets.JIRA_USER_EMAIL }}"
          $JiraIssue = "MOBL-40"
          $ApiToken = "${{ secrets.JIRA_API_TOKEN }}"
          # base64 encoded string for jira auth format
          $pair = "$($Username):$($ApiToken)"
          $encodedAuth = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes($pair))

          
          $headers = @{
              "Authorization" = "Basic $encodedAuth"
              "Content-Type"  = "application/json"
          }

          
          $body = @{
              "transition" = @{
                  "id" = "6"
              }
          }

          
          $bodyJson = $body | ConvertTo-Json

          
          Invoke-RestMethod -Uri "https://one-atlas-fvee.atlassian.net/rest/api/3/issue/$($JiraIssue)/transitions" `
              -Method Post `
              -Headers $headers `
              -Body $bodyJson
  # transition change to testing
  deploy-to-staging:
    needs: [build-and-test, security-scan]
    runs-on: self-hosted
    environment: staging
    if: github.event_name == 'workflow_dispatch'
    steps:
      # - uses: actions/checkout@v2
      - name: Deploy to Staging
        run: echo "Your deployment to staging script goes here..."
      - name: Transition Jira Issue
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          $LastCommit = ${{ github.event.commit[0].message }}
          $Username = "${{ secrets.JIRA_USER_EMAIL }}"
          $JiraIssue = "MOBL-40"
          $ApiToken = "${{ secrets.JIRA_API_TOKEN }}"
          # base64 encoded string for jira auth format
          $pair = "$($Username):$($ApiToken)"
          $encodedAuth = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes($pair))

          
          $headers = @{
              "Authorization" = "Basic $encodedAuth"
              "Content-Type"  = "application/json"
          }

          
          $body = @{
              "transition" = @{
                  "id" = "12"
              }
          }

          
          $bodyJson = $body | ConvertTo-Json

          
          Invoke-RestMethod -Uri "https://one-atlas-fvee.atlassian.net/rest/api/3/issue/$($JiraIssue)/transitions" `
              -Method Post `
              -Headers $headers `
              -Body $bodyJson
        # run: |
        #   LAST_COMMIT_MESSAGE=$(git log -n 1 --pretty=format:%s ${{ github.sha }})
        #   curl -X POST -H "Content-Type: application/json" \
        #        -u "${JIRA_USER_EMAIL}:${JIRA_API_TOKEN}" \
        #        "${JIRA_BASE_URL}/rest/api/3/issue/${LAST_COMMIT_MESSAGE}/transitions" \
        #        -d '{"transition": {"name": "Testing"}}'